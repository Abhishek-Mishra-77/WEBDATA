self.onmessage=e=>{const{dataHeaders:t,keyHEaders:r,mappedKey:s,subjectWiseMarking:a,ctx:o,headers:n}=e.data;let c=[];for(let l=1;l<t.length;l++){l%15===0&&self.postMessage({type:"progress",processedData:l});let e=+o.paperMarkings.start,p=+e+ +o.paperMarkings.end-1,g=0,d=0,i=0,u=+o.paperMarkings.correctPoint,f=+o.paperMarkings.wrongPoint,h=1,k=!1;for(let o=1;o<r.length;o++)if(t[l][s]==r[o][s]){k=!0;let s=0,b={};for(;s<r[0].length;){let e=r[0][s];b={...b,[e]:t[l][e]},s++}if(a.length>0){let s={},u=0;for(let c=0;c<a.length;c++){1==l&&1==h&&n.push("".concat(a[c].subject,"_notAttempted"),"".concat(a[c].subject,"_Correct"),"".concat(a[c].subject,"_wrongAnswer"),"".concat(a[c].subject,"_total")),e=+a[c].start,p=+a[c].end,g=0,d=0,i=0;let f=0;for(;e<=p;){let s=r[0][e];""==t[l][s]||""==r[o][s]?i++:r[o][s]==t[l][s]?g++:r[o][s]!=t[l][s]&&d++,e++}f=g*+a[c].correctPoint-+d*+a[c].wrongPoint,u+=f,s={...s,["".concat(a[c].subject,"_notAttempted")]:i,["".concat(a[c].subject,"_Correct")]:g,["".concat(a[c].subject,"_wrongAnswer")]:d,["".concat(a[c].subject,"_total")]:f,total:u}}h++,c.push({...s,...b})}else{for(;e<=p;){let s=r[0][e];""==t[l][s]?i++:r[o][s]==t[l][s]?g++:r[o][s]!=t[l][s]&&d++,e++}c.push({...b,notAttempted:i,wrongAnswer:d,correctAnswer:g,total_Score:g*u-d*f,remark:"ok"})}break}if(!k){const e={...t[l],remark:"mapped key not match"};c.push(e)}}self.postMessage({type:"result",headersData:n,finalAnswers:c})};
//# sourceMappingURL=597.30624057.chunk.js.map